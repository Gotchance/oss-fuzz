name: OSS-Fuzz Emulation CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  fuzz:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Check Docker version
      run: docker --version

    - name: Build fuzzers
      run: |
        python3 infra/helper.py build_fuzzers zlib

    - name: Run fuzzers and dump crash info
      run: |
        mkdir -p artifacts
        python3 infra/helper.py run_fuzzer zlib compress_fuzzer corpus/ || true

        echo "===== Crash files ====="
        if ls build/out/zlib/crash-* 1>/dev/null 2>&1; then
          ls -lh build/out/zlib/crash-*
          echo "===== Crash contents (base64) ====="
          for f in build/out/zlib/crash-*; do
            echo "[PoC file: $f]"
            base64 "$f" | head -n 10
            echo "---"
          done
        else
          echo "No crash files found."
        fi


# name: OSS-Fuzz Emulation CI

# on:
#   workflow_dispatch:        # 手動実行用
#   push:
#     branches:
#       - main                # 任意ブランチに調整

# jobs:
#   fuzz:
#     runs-on: ubuntu-latest
#     timeout-minutes: 30

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3

#     - name: Set up Docker
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y docker.io
#         docker --version

#     - name: Build fuzzers
#       run: |
#         python3 infra/helper.py build_fuzzers zlib

#     - name: Run fuzzers (short test)
#       run: |
#         mkdir -p artifacts
#         python3 infra/helper.py run_fuzzer zlib compress_fuzzer corpus/ || true
#         cp build/out/zlib/crash-* artifacts/ 2>/dev/null || true

#     - name: Upload crash artifacts
#       if: always()
#       uses: actions/upload-artifact@v3.1.3
#       with:
#         name: crash-reports
#         path: artifacts/
